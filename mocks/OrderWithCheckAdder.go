// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/alrund/yp-1-project/internal/domain/entity"
	mock "github.com/stretchr/testify/mock"
)

// OrderWithCheckAdder is an autogenerated mock type for the OrderWithCheckAdder type
type OrderWithCheckAdder struct {
	mock.Mock
}

// Add provides a mock function with given fields: ctx, order
func (_m *OrderWithCheckAdder) Add(ctx context.Context, order *entity.Order) error {
	ret := _m.Called(ctx, order)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Order) error); ok {
		r0 = rf(ctx, order)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: ctx, number
func (_m *OrderWithCheckAdder) Get(ctx context.Context, number string) (*entity.Order, error) {
	ret := _m.Called(ctx, number)

	var r0 *entity.Order
	if rf, ok := ret.Get(0).(func(context.Context, string) *entity.Order); ok {
		r0 = rf(ctx, number)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.Order)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, number)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOrderWithCheckAdder interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrderWithCheckAdder creates a new instance of OrderWithCheckAdder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrderWithCheckAdder(t mockConstructorTestingTNewOrderWithCheckAdder) *OrderWithCheckAdder {
	mock := &OrderWithCheckAdder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
