// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/alrund/yp-1-project/internal/domain/entity"
	mock "github.com/stretchr/testify/mock"
)

// UserAccrualer is an autogenerated mock type for the UserAccrualer type
type UserAccrualer struct {
	mock.Mock
}

// Accrual provides a mock function with given fields: ctx, user, accrual
func (_m *UserAccrualer) Accrual(ctx context.Context, user *entity.User, accrual float32) error {
	ret := _m.Called(ctx, user, accrual)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.User, float32) error); ok {
		r0 = rf(ctx, user, accrual)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserAccrualer interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserAccrualer creates a new instance of UserAccrualer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserAccrualer(t mockConstructorTestingTNewUserAccrualer) *UserAccrualer {
	mock := &UserAccrualer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
