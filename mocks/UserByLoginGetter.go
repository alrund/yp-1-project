// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/alrund/yp-1-project/internal/domain/entity"
	mock "github.com/stretchr/testify/mock"
)

// UserByLoginGetter is an autogenerated mock type for the UserByLoginGetter type
type UserByLoginGetter struct {
	mock.Mock
}

// GetByLogin provides a mock function with given fields: ctx, login
func (_m *UserByLoginGetter) GetByLogin(ctx context.Context, login string) (*entity.User, error) {
	ret := _m.Called(ctx, login)

	var r0 *entity.User
	if rf, ok := ret.Get(0).(func(context.Context, string) *entity.User); ok {
		r0 = rf(ctx, login)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, login)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUserByLoginGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserByLoginGetter creates a new instance of UserByLoginGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserByLoginGetter(t mockConstructorTestingTNewUserByLoginGetter) *UserByLoginGetter {
	mock := &UserByLoginGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
