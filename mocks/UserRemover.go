// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// UserRemover is an autogenerated mock type for the UserRemover type
type UserRemover struct {
	mock.Mock
}

// Remove provides a mock function with given fields: ctx, userID
func (_m *UserRemover) Remove(ctx context.Context, userID uuid.UUID) error {
	ret := _m.Called(ctx, userID)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) error); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserRemover interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserRemover creates a new instance of UserRemover. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserRemover(t mockConstructorTestingTNewUserRemover) *UserRemover {
	mock := &UserRemover{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
